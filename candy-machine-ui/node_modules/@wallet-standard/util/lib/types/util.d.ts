/** TODO: docs */
export declare function bytesEqual(a: Uint8Array, b: Uint8Array): boolean;
interface Indexed<T> {
    length: number;
    [index: number]: T;
}
/** TODO: docs */
export declare function arraysEqual<T>(a: Indexed<T>, b: Indexed<T>): boolean;
/** TODO: docs */
export declare function concatBytes(first: Uint8Array, ...others: ReadonlyArray<Uint8Array>): Uint8Array;
/** TODO: docs */
export declare function pick<T, K extends keyof T>(object: T, ...keys: K[]): Pick<T, K>;
export {};
//# sourceMappingURL=util.d.ts.map